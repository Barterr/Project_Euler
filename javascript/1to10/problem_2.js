/**
 * Problem 2 - Even Fibonacci numbers
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

/**
 * Returns the sum of all number in a fibonacci sequence
 * @param {Number} limit last number in the fibonacci sequence
 */
const sumOfEvenFibonacci = limit => {
  const sequence = fibonacci(limit)
  const result = sequence.reduce((sum, current) => {
    return current % 2 === 0 ? sum + current : sum
  }, 0)
  return result
}

const fibonacci = limit => {
  const result = [1, 2]
  while (result[result.length - 1] < limit) {
    lastIndex = result.length - 1
    const next = result[lastIndex] + result[lastIndex - 1]
    if (next <= limit) {
      result.push(next)
    } else {
      return result
    }
  }
  return result
}

sumOfEvenFibonacci(10)

module.exports = sumOfEvenFibonacci
